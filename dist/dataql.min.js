/*! dataql v0.1 */
!function(a){"use strict";function b(){var a=this;a._tables=[],a._operations=[],a._result=[]}b.operators={},b.operators["="]=function(a,b){return a==b},b.operators[">"]=function(a,b){return a>b},b.operators["<"]=function(a,b){return b>a},b.operators[">="]=function(a,b){return a>=b},b.operators["<="]=function(a,b){return b>=a},b.prototype.tables=function(){var a=this;return a._tables=_.toArray(arguments),a._resources={},a},b.prototype._buildCondition=function(a){return function(c,d){var e=b.operators[a.cmp],f=_.iteratee(a.left),g=_.iteratee(a.right);return e(f(c),g(d))}},b.prototype._join=function(a,c,d){var e=[];return _.has(a,d.table)&&(e=a[d.table].records),_.map(c,function(a){var c=_.filter(e,function(c){var e=b.operators[d.where.cmp];return e(a[d.where.left],c[d.where.right])});return _.extend(a,_.first(c))})},b.prototype._set=function(a,b,c){return a[c.table].records},b.prototype._filter=function(b,c,d){return _.filter(c,function(b){var c=a.DataQL.operators[d.where.cmp];return c(b[d.where.left],d.where.right)})},b.prototype._limit=function(a,b,c){return b.slice(c.start,c.start+c.numRows)},b.prototype.op=function(a){var b=this;return b._operations.push(a),b},b.prototype._runOps=function(){var a=this;return _.each(a._operations,function(b){console.log(b),a._result=a["_"+b.method](a._resources,a._result,_.omit(b,"method"))}),a},b.prototype.execute=function(){var a=this,b=_.pluck(a._tables,"as");a._fetchResources().done(function(){a._resources=_.zipObject(b,_.toArray(arguments)),a._runOps(),console.table(a._result)})},b.prototype._backendFromString=function(a){return _.findWhere(recline.Backend,{__type__:a})},b.prototype._fetchResources=function(){var a=this,b=[];return _.each(a._tables,function(c){var d=a._backendFromString(c.backend);if(!d)throw new Error("Backend not found");b.push(d.fetch(c))}),$.when.apply($,b)},a.DataQL=b}(window);var CKAN={},isNodeModule="undefined"!=typeof module&&null!=module&&"undefined"!=typeof require;if(isNodeModule){var _=require("underscore"),request=require("request");module.exports=CKAN}!function(a){a.Client=function(a,c){this.endpoint=b(a),this.apiKey=c},a.Client.prototype.action=function(a,b,c){a.indexOf(!1)&&(a=a.replace("dataset_","package_"));var d={url:this.endpoint+"/3/action/"+a,data:b,type:"POST"};return this._ajax(d,c)},a.Client.prototype._ajax=function(a,b){a.headers=a.headers||{},this.apiKey&&(a.headers["X-CKAN-API-KEY"]=this.apiKey);var e=isNodeModule?c:d;return e(a,b)},a.Client.prototype.datastoreQuery=function(b,c){var d=a._normalizeQuery(b);this.action("datastore_search",d,function(b,d){if(b)return void c(b);var e=_.map(d.result.fields,function(b){return b.type=b.type in a.ckan2JsonTableSchemaTypes?a.ckan2JsonTableSchemaTypes[b.type]:b.type,b}),f={total:d.result.total,fields:e,hits:d.result.records};c(null,f)})},a.Client.prototype.datastoreSqlQuery=function(b,c){this.action("datastore_search_sql",{sql:b},function(b,d){if(b){var e=JSON.parse(b.message),f={original:b,code:b.code,message:e.error.info.orig[0]};return void c(f)}var g=_.map(d.result.fields,function(b){return b.type=b.type in a.ckan2JsonTableSchemaTypes?a.ckan2JsonTableSchemaTypes[b.type]:b.type,b}),h={total:d.result.length,fields:g,hits:d.result.records};c(null,h)})},a.ckan2JsonTableSchemaTypes={text:"string","int":"integer",int4:"integer",int8:"integer",float8:"float",timestamp:"datetime",bool:"boolean"},a.jsonTableSchema2CkanTypes={string:"text",number:"float",integer:"int",datetime:"timestamp","boolean":"bool",binary:"bytea",object:"json",array:"text[]",any:"text"},a.Client.prototype.datastoreResources=function(a){var b={resource_id:"_table_metadata"};return this.action("datastore_search",b,a)};var b=function(a){return a=a||"/",a=a.replace(/\/$/,""),a.match(/\/api$/)||(a+="/api"),a},c=function(a,b){var c={url:a.url,headers:a.headers||{},method:a.type||"GET",json:a.data};request(c,function(a,c,d){!a&&c&&200!==c.statusCode&&302!==c.statusCode&&(a="CKANJS API Error. HTTP code "+c.statusCode+". Message: "+JSON.stringify(d,null,2)),b(a,d)})},d=function(a,b){return a.data=encodeURIComponent(JSON.stringify(a.data)),a.success=function(a){b(null,a)},a.error=function(a){var c={code:a.status,message:a.responseText};b(c)},a.headers&&(a.beforeSend=function(b){for(key in a.headers)b.setRequestHeader(key,a.headers[key])}),jQuery.ajax(a)};a._normalizeQuery=function(a){var b={resource_id:a.resource_id,q:a.q,filters:{},limit:a.size||10,offset:a.from||0};if(a.sort&&a.sort.length>0){var c=_.map(a.sort,function(a){return a.field+" "+(a.order||"")});b.sort=c.join(",")}return a.filters&&a.filters.length>0&&_.each(a.filters,function(a){"term"===a.type&&(b.filters[a.field]=a.term)}),b},a.parseCkanResourceUrl=function(a){parts=a.split("/");var b=parts.length;return{resource_id:parts[b-1],endpoint:parts.slice(0,[b-4]).join("/")+"/api"}}}(CKAN);var recline=recline||{};recline.Backend=recline.Backend||{},recline.Backend.Ckan=recline.Backend.Ckan||{},function(a){a.__type__="ckan";var b=_.isUndefined(this.jQuery)?_.Deferred:jQuery.Deferred;a.fetch=function(c){var d=new b;return a.query({},c).done(function(a){d.resolve({fields:a.fields,records:a.hits})}).fail(function(a){d.reject(a)}),d.promise()},a.query=function(a,c){var d,e=new b;if(c.endpoint)d=new CKAN.Client(c.endpoint);else{var f=CKAN.parseCkanResourceUrl(c.url);c.id=f.resource_id,d=new CKAN.Client(f.endpoint)}return a.resource_id=c.id,d.datastoreQuery(a,function(a,b){a?e.reject(a):e.resolve(b)}),e.promise()}}(recline.Backend.Ckan);var CSV={};!function(a){"use strict";function b(a){return"\n"!==a.charAt(a.length-1)?a:a.substring(0,a.length-1)}a.__type__="csv";var c="undefined"!=typeof jQuery&&jQuery.Deferred||_.Deferred;a.fetch=function(b){var d=new c;if(b.file){var e=new FileReader,f=b.encoding||"UTF-8";e.onload=function(c){var e=a.extractFields(a.parse(c.target.result,b),b);e.useMemoryStore=!0,e.metadata={filename:b.file.name},d.resolve(e)},e.onerror=function(a){alert("Failed to load file. Code: "+a.target.error.code)},e.readAsText(b.file,f)}else if(b.data){var g=a.extractFields(a.parse(b.data,b),b);g.useMemoryStore=!0,d.resolve(g)}else b.url&&jQuery.get(b.url).done(function(c){var e=a.extractFields(a.parse(c,b),b);e.useMemoryStore=!0,d.resolve(e)});return d.promise()},a.extractFields=function(a,b){return b.noHeaderRow!==!0&&a.length>0?{fields:a[0],records:a.slice(1)}:{records:a}},a.normalizeDialectOptions=function(a){var b={delimiter:",",doublequote:!0,lineterminator:"\n",quotechar:'"',skipinitialspace:!0,skipinitialrows:0};for(var c in a)"trim"===c?b.skipinitialspace=a.trim:b[c.toLowerCase()]=a[c];return b},a.parse=function(c,f){c=b(c);var h,i,j=a.normalizeDialectOptions(f),k="",l=!1,m=!1,n="",o=[],p=[];for(i=function(a){return m!==!0&&(""===a?a=null:j.skipinitialspace===!0&&(a=g(a)),d.test(a)?a=parseInt(a,10):e.test(a)&&(a=parseFloat(a,10))),a},h=0;h<c.length;h+=1)k=c.charAt(h),l!==!1||k!==j.delimiter&&"\n"!==k?k!==j.quotechar?n+=k:l?c.charAt(h+1)===j.quotechar?(n+=j.quotechar,h+=1):l=!1:(l=!0,m=!0):(n=i(n),o.push(n),"\n"===k&&(p.push(o),o=[]),n="",m=!1);return n=i(n),o.push(n),p.push(o),j.skipinitialrows&&(p=p.slice(j.skipinitialrows)),p},a.objectToArray=function(a){for(var b=[],c=[],d=0;d<a.fields.length;d++)c.push(a.fields[d].id);b.push(c);for(var d=0;d<a.records.length;d++){for(var e=[],f=a.records[d],g=0;g<c.length;g++)e.push(f[c[g]]);b.push(e)}return b},a.serialize=function(b,c){var d=null;d=b instanceof Array?b:a.objectToArray(b);var e,g,h,i=a.normalizeDialectOptions(c),j="",k="",l="",m="";for(h=function(a){return null===a?a="":"string"==typeof a&&f.test(a)?(i.doublequote&&(a=a.replace(/"/g,'""')),a=i.quotechar+a+i.quotechar):"number"==typeof a&&(a=a.toString(10)),a},e=0;e<d.length;e+=1)for(j=d[e],g=0;g<j.length;g+=1)k=h(j[g]),g===j.length-1?(l+=k,m+=l+"\n",l=""):l+=k+i.delimiter,k="";return m};var d=/^\d+$/,e=/^\d*\.\d+$|^\d+\.\d*$/,f=/^\s|\s$|,|"|\n/,g=function(){return String.prototype.trim?function(a){return a.trim()}:function(a){return a.replace(/^\s*/,"").replace(/\s*$/,"")}}()}(CSV);var recline=recline||{};recline.Backend=recline.Backend||{},recline.Backend.CSV=CSV;var ES={};!function(a){_.isUndefined(this.jQuery)?_.Deferred:jQuery.Deferred;a.Table=function(a,c){var d=this;this.endpoint=a,this.options=_.extend({dataType:"json"},c),this.mapping=function(){var a=d.endpoint+"/_mapping",c=b({url:a,dataType:this.options.dataType});return c},this.get=function(a){var c=this.endpoint+"/"+a;return b({url:c,dataType:"json"})},this.upsert=function(a){var c=JSON.stringify(a);return url=this.endpoint,a.id&&(url+="/"+a.id),b({url:url,type:"POST",data:c,dataType:"json"})},this.update=function(a,c){var d=JSON.stringify({doc:a});return b({url:this.endpoint+"/"+c+"/_update",type:"POST",data:d,dataType:"json"})},this.remove=function(a){return url=this.endpoint,url+="/"+a,b({url:url,type:"DELETE",dataType:"json"})},this._normalizeQuery=function(a){var b,c=this,d=a&&a.toJSON?a.toJSON():_.extend({},a);b=d.q?{query_string:{query:d.q}}:d.ids?{ids:{values:d.ids}}:{match_all:{}};var e;return d.filters&&d.filters.length?(e={filtered:{filter:{and:[]}}},_.each(d.filters,function(a){e.filtered.filter.and.push(c._convertFilter(a))}),(d.q||d.ids)&&(e.filtered.query=b)):(e={constant_score:{query:{}}},e.constant_score.query=b),e},this._normalizeSort=function(a){var b=_.map(a,function(a){var b={},c=_.clone(a);return delete c.field,b[a.field]=c,b});return b},this._convertFilter=function(a){var b={};return b[a.type]={},"term"===a.type?b.term[a.field]=a.term:"terms"===a.type?(b.terms[a.field]=a.terms,"execution"in a&&(b.terms.execution=a.execution)):"geo_distance"===a.type?(b.geo_distance[a.field]=a.point,b.geo_distance.distance=a.distance,b.geo_distance.unit=a.unit):"range"===a.type?(b.range[a.field]={from:a.from,to:a.to},_.has(a,"include_lower")&&(b.range[a.field].include_lower=a.include_lower),_.has(a,"include_upper")&&(b.range[a.field].include_upper=a.include_upper)):"type"==a.type?b.type={value:a.value}:"exists"==a.type?b.exists={field:a.field}:"missing"==a.type&&(b.missing={field:a.field}),a.not&&(b={not:JSON.parse(JSON.stringify(b))}),b},this.query=function(a){var c=a&&a.toJSON?a.toJSON():_.extend({},a);c.query=this._normalizeQuery(a),delete c.q,delete c.filters,c.sort&&c.sort.length>0&&(c.sort=this._normalizeSort(c.sort)),c.ids&&(c.size=c.ids.length,delete c.ids);var d=({source:JSON.stringify(c)},this.endpoint+"/_search"),e=b({url:d,type:"POST",data:JSON.stringify(c)});return e}};var b=function(a,b){var c={};b&&(c={beforeSend:function(a){_.each(b,function(b,c){a.setRequestHeader(c,b)})}});var a=_.extend(c,a);return jQuery.ajax(a)}}(ES);var recline=recline||{};recline.Backend=recline.Backend||{},recline.Backend.ElasticSearch=recline.Backend.ElasticSearch||{},function(a){"use strict";a.__type__="elasticsearch";var b=_.isUndefined(jQuery)?_.Deferred:jQuery.Deferred;a.esOptions={},a.fetch=function(c){var d=new ES.Table(c.url,a.esOptions),e=new b;return d.mapping().done(function(a){if(!a)return void e.reject({message:"Elastic Search did not return a mapping"});var b=_.keys(a)[0],c=_.map(a[b].properties,function(a,b){return a.id=b,a});e.resolve({fields:c})}).fail(function(a){e.reject(a)}),e.promise()},a.save=function(c,d){var e=new ES.Table(d.url,a.esOptions);if(c.creates.length+c.updates.length+c.deletes.length>1){var f=new b;return msg="Saving more than one item at a time not yet supported",alert(msg),f.reject(msg),f.promise()}return c.creates.length>0?e.upsert(c.creates[0]):c.updates.length>0?e.upsert(c.updates[0]):c.deletes.length>0?e.remove(c.deletes[0].id):void 0},a.update=function(b,c,d){var e=new ES.Table(d.url,a.esOptions);return e.update(b,c)},a.query=function(c,d){var e=new b,f=new ES.Table(d.url,a.esOptions),g=f.query(c);return g.done(function(a){var b={total:a.hits.total};b.hits=_.map(a.hits.hits,function(a){return"id"in a._source||!a._id||(a._source.id=a._id),a._source}),a.facets&&(b.facets=a.facets),e.resolve(b)}).fail(function(a){var b={title:"Failed: "+a.status+" code",message:a.responseText};e.reject(b)}),e.promise()}}(recline.Backend.ElasticSearch);var recline=recline||{};if(recline.Backend=recline.Backend||{},recline.Backend.GDocs=recline.Backend.GDocs||{},"undefined"!=typeof module&&null!=module&&"undefined"!=typeof require){var _=require("underscore");module.exports=recline}!function(a){a.__type__="gdocs";var b="undefined"!=typeof jQuery&&jQuery.Deferred||_.Deferred;a.fetch=function(c){var d=new b,e=a.getGDocsApiUrls(c.url,c.worksheetIndex);return function(){var a=new b;return jQuery.getJSON(e.spreadsheetAPI,function(b){a.resolve({spreadsheetTitle:b.feed.title.$t})}).fail(function(b){a.reject(b)}),a.promise()}().then(function(b){jQuery.getJSON(e.worksheetAPI,function(c){var f=a.parseData(c),g=_.map(f.fields,function(a){return{id:a}}),h=_.extend(e,{title:b.spreadsheetTitle+" - "+f.worksheetTitle,spreadsheetTitle:b.spreadsheetTitle,worksheetTitle:f.worksheetTitle});d.resolve({metadata:h,records:f.records,fields:g,useMemoryStore:!0})})}).fail(function(a){d.reject(a)}),d.promise()},a.parseData=function(a,b){var c,d,b=b||{},e=b.colTypes||{},f={fields:[],records:[]},g=a.feed.entry||[],h=/^([\d\.\-]+)\%$/;for(c in g[0])/^gsx/.test(c)&&(d=c.substr(4),f.fields.push(d));return f.records=_.map(g,function(a){var b={};return _.each(f.fields,function(c){var d,f="gsx$"+c,g=a[f].$t;"percent"===e[c]&&h.test(g)&&(d=h.exec(g)[1],g=parseFloat(d)/100),b[c]=g}),b}),f.worksheetTitle=a.feed.title.$t,f},a.getGDocsApiUrls=function(a,b){var c=/.*spreadsheet\/ccc\?.*key=([^#?&+]+)[^#]*(#gid=([\d]+).*)?/,d=/.*spreadsheets\/d\/([^\/]+)\/edit(#gid=([\d]+).*)?/;return matches=a.match(c),matches2=a.match(d),matches?(key=matches[1],worksheet=parseInt(matches[3])+1,isNaN(worksheet)&&(worksheet=1)):matches2?(key=matches2[1],worksheet=1,isNaN(worksheet)&&(worksheet=1)):-1!=a.indexOf("spreadsheets.google.com/feeds")?(key=a.split("/")[5],worksheet=1):(key=a,worksheet=1),worksheet=b||0===b?b:worksheet,{worksheetAPI:"https://spreadsheets.google.com/feeds/list/"+key+"/"+worksheet+"/public/values?alt=json",spreadsheetAPI:"https://spreadsheets.google.com/feeds/worksheets/"+key+"/public/basic?alt=json",spreadsheetKey:key,worksheetIndex:worksheet}}}(recline.Backend.GDocs);var Inline={};!function(a){"use strict";a.__type__="inline";var b="undefined"!=typeof jQuery&&jQuery.Deferred||_.Deferred;a.fetch=function(a){var c=new b;return _.defer(c.resolve,a),c.promise()}}(Inline);var recline=recline||{};recline.Backend=recline.Backend||{},recline.Backend.Inline=Inline;var PapaCSV={};!function(a){"use strict";a.__type__="papacsv";var b="undefined"!=typeof jQuery&&jQuery.Deferred||_.Deferred;a.fetch=function(c){var d=new b,e={complete:_.partial(a._complete,_,d,c)};return c.file?Papa.parse(c.file,e):c.data?Papa.parse(c.data,e):c.url&&(e.download=!0,Papa.parse(c.url,e)),d.promise()},a._complete=function(b,c,d){var e=a.extractFields(b.data,d);e.useMemoryStore=!0,c.resolve(e)},a.extractFields=function(a,b){return b.noHeaderRow!==!0&&a.length>0?{fields:a[0],records:a.slice(1)}:{records:a}}}(PapaCSV);var recline=recline||{};recline.Backend=recline.Backend||{},recline.Backend.PapaCSV=PapaCSV,this.recline=this.recline||{},this.recline.Backend=this.recline.Backend||{},this.recline.Backend.DataProxy=this.recline.Backend.DataProxy||{},function(a){"use strict";a.__type__="dataproxy",a.dataproxy_url="//jsonpdataproxy.appspot.com",a.timeout=5e3;var b="undefined"!=typeof jQuery&&jQuery.Deferred||_.Deferred;a.fetch=function(d){var e={url:d.url,"max-results":d.size||d.rows||1e3,type:d.format||""},f=jQuery.ajax({url:a.dataproxy_url,data:e,dataType:"jsonp"}),g=new b;return c(f).done(function(a){a.error&&g.reject(a.error),g.resolve({records:a.data,fields:a.fields,useMemoryStore:!0})}).fail(function(a){g.reject(a)}),g.promise()};var c=function(c){var d=new b,e=setTimeout(function(){d.reject({message:"Request Error: Backend did not respond after "+a.timeout/1e3+" seconds"})},a.timeout);return c.done(function(a){clearTimeout(e),d.resolve(a)}).fail(function(a){clearTimeout(e),d.reject(a)}),d.promise()}}(this.recline.Backend.DataProxy),this.recline=this.recline||{},this.recline.Backend=this.recline.Backend||{},this.recline.Backend.Memory=this.recline.Backend.Memory||{},function(a){"use strict";a.__type__="memory";var b="undefined"!=typeof jQuery&&jQuery.Deferred||_.Deferred;a.Store=function(a,c){var d=this;this.records=a,this.data=this.records,c?this.fields=c:a&&(this.fields=_.map(a[0],function(a,b){return{id:b,type:"string"}})),this.update=function(a){_.each(d.records,function(b,c){a.id===b.id&&(d.records[c]=a)})},this.remove=function(a){var b=_.reject(d.records,function(b){return a.id===b.id});this.records=b},this.save=function(a){var c=this,d=new b;return _.each(a.updates,function(a){c.update(a)}),_.each(a.deletes,function(a){c.remove(a)}),d.resolve(),d.promise()},this.query=function(a){var c=new b,d=a.size||this.records.length,e=a.from||0,f=this.records;f=this._applyFilters(f,a),f=this._applyFreeTextQuery(f,a),_.each(a.sort,function(a){var b=a.field;f=_.sortBy(f,function(a){var c=a[b];return c}),"desc"==a.order&&f.reverse()});var g=this.computeFacets(f,a),h={total:f.length,hits:f.slice(e,e+d),facets:g};return c.resolve(h),c.promise()},this._applyFilters=function(a,b){function c(a){var b=l[a.field].type||"string";return k[b]}function e(a,b){var d=c(b),e=d(a[b.field]),f=d(b.term);return e===f}function f(a,b){var d=c(b),e=d(a[b.field]),f=d(b.terms).split(",");return _.indexOf(f,e)>=0}function g(a,b){var d=_.isUndefined(b.from)||null===b.from||""===b.from,e=_.isUndefined(b.to)||null===b.to||""===b.to,f=c(b),g=f(a[b.field]),h=f(d?"":b.from),i=f(e?"":b.to);return d&&e||""!==g?(d||g>=h)&&(e||i>=g):!1}function h(){}var i=b.filters,j={term:e,terms:f,range:g,geo_distance:h},k={integer:function(a){return parseFloat(a,10)},"float":function(a){return parseFloat(a,10)},number:function(a){return parseFloat(a,10)},string:function(a){return a.toString()},date:function(a){return moment(a).valueOf()},datetime:function(a){return new Date(a).valueOf()}},l={};return _.each(d.fields,function(a){l[a.id]=a}),_.filter(a,function(a){var b=_.map(i,function(b){return j[b.type](a,b)});return _.all(b,_.identity)})},this._applyFreeTextQuery=function(a,b){if(b.q){var c=b.q.split(" "),e=_.map(c,function(a){return new RegExp(a.toLowerCase())});a=_.filter(a,function(a){var b=!0;return _.each(e,function(c){var e=!1;_.each(d.fields,function(b){var d=a[b.id];d=null!==d&&void 0!==d?d.toString():"",e=e||c.test(d.toLowerCase())}),b=b&&e}),b})}return a},this.computeFacets=function(a,b){var c={};return b.facets?(_.each(b.facets,function(a,b){c[b]=new recline.Model.Facet({id:b}).toJSON(),c[b].termsall={}}),_.each(a,function(a){_.each(b.facets,function(b,d){var e=b.terms.field,f=a[e],g=c[d];f?g.termsall[f]=g.termsall[f]?g.termsall[f]+1:1:g.missing=g.missing+1})}),_.each(b.facets,function(a,b){var d=c[b],e=_.map(d.termsall,function(a,b){return{term:b,count:a}});d.terms=_.sortBy(e,function(a){return-a.count}),d.terms=d.terms.slice(0,10)}),c):c}}}(this.recline.Backend.Memory),"indexOf"in Array.prototype||(Array.prototype.indexOf=function(a,b){void 0===b&&(b=0),0>b&&(b+=this.length),0>b&&(b=0);for(var c=this.length;c>b;b++)if(b in this&&this[b]===a)return b;return-1}),"lastIndexOf"in Array.prototype||(Array.prototype.lastIndexOf=function(a,b){for(void 0===b&&(b=this.length-1),0>b&&(b+=this.length),b>this.length-1&&(b=this.length-1),b++;b-->0;)if(b in this&&this[b]===a)return b;return-1}),"forEach"in Array.prototype||(Array.prototype.forEach=function(a,b){for(var c=0,d=this.length;d>c;c++)c in this&&a.call(b,this[c],c,this)}),"map"in Array.prototype||(Array.prototype.map=function(a,b){for(var c=new Array(this.length),d=0,e=this.length;e>d;d++)d in this&&(c[d]=a.call(b,this[d],d,this));return c}),"filter"in Array.prototype||(Array.prototype.filter=function(a,b){for(var c,d=[],e=0,f=this.length;f>e;e++)e in this&&a.call(b,c=this[e],e,this)&&d.push(c);return d}),"every"in Array.prototype||(Array.prototype.every=function(a,b){for(var c=0,d=this.length;d>c;c++)if(c in this&&!a.call(b,this[c],c,this))return!1;return!0}),"some"in Array.prototype||(Array.prototype.some=function(a,b){for(var c=0,d=this.length;d>c;c++)if(c in this&&a.call(b,this[c],c,this))return!0;return!1}),this.recline=this.recline||{},this.recline.Model=this.recline.Model||{},function(a){"use strict";var b="undefined"!=typeof jQuery&&jQuery.Deferred||_.Deferred;a.Dataset=Backbone.Model.extend({constructor:function(){Backbone.Model.prototype.constructor.apply(this,arguments)},initialize:function(){var b=this;_.bindAll(this,"query"),this.backend=null,this.get("backend")?this.backend=this._backendFromString(this.get("backend")):this.get("records")&&(this.backend=recline.Backend.Memory),this.fields=new a.FieldList,this.records=new a.RecordList,this._changes={deletes:[],updates:[],creates:[]},this.facets=new a.FacetList,this.recordCount=null,this.queryState=new a.Query,this.queryState.bind("change facet:add",function(){b.query()}),this._store=this.backend,this._handleResult=null!=this.backend&&_.has(this.backend,"handleQueryResult")?this.backend.handleQueryResult:this._handleQueryResult,this.backend==recline.Backend.Memory&&this.fetch()},sync:function(a,b,c){return this.backend.sync(a,b,c)},fetch:function(){function a(a){var b=c.get("fields")||a.fields,e=c._normalizeRecordsAndFields(a.records,b);a.useMemoryStore&&(c._store=new recline.Backend.Memory.Store(e.records,e.fields)),c.set(a.metadata),c.fields.reset(e.fields),c.query().done(function(){d.resolve(c)}).fail(function(a){d.reject(a)})}var c=this,d=new b;return this.backend!==recline.Backend.Memory?this.backend.fetch(this.toJSON()).done(a).fail(function(a){d.reject(a)}):a({records:this.get("records"),fields:this.get("fields"),useMemoryStore:!0}),d.promise()},_normalizeRecordsAndFields:function(a,b){if(!b&&a&&a.length>0&&(a[0]instanceof Array?(b=a[0],a=a.slice(1)):b=_.map(_.keys(a[0]),function(a){return{id:a}})),b&&b.length>0&&(null===b[0]||"object"!=typeof b[0])){var c={};b=_.map(b,function(a){a=null===a?"":a.toString();var b=a.replace(/^\s+|\s+$/g,"");for(""===b&&(b="_noname_",a=b);b in c;)c[a]+=1,b=a+c[a];return a in c||(c[a]=0),{id:b}})}return a&&a.length>0&&a[0]instanceof Array&&(a=_.map(a,function(a){var c={};return _.each(b,function(b,d){c[b.id]=a[d]}),c})),{fields:b,records:a}},save:function(){return this._store.save(this._changes,this.toJSON())},query:function(c){var d=this,e=new b;if(this.trigger("query:start"),c){var f=c;c instanceof a.Query&&(f=c.toJSON()),this.queryState.set(f,{silent:!0})}var g=this.queryState.toJSON();return this._store.query(g,this.toJSON()).done(function(a){d._handleResult(a),d.trigger("query:done"),e.resolve(d.records)}).fail(function(a){d.trigger("query:fail",a),e.reject(a)}),e.promise()},_handleQueryResult:function(b){var c=this;c.recordCount=b.total;var d=_.map(b.hits,function(b){var d=new a.Record(b);return d.fields=c.fields,d.bind("change",function(a){c._changes.updates.push(a.toJSON())}),d.bind("destroy",function(a){c._changes.deletes.push(a.toJSON())}),d});if(c.records.reset(d),b.facets){var e=_.map(b.facets,function(b,c){return b.id=c,new a.Facet(b)});c.facets.reset(e)}},toTemplateJSON:function(){var a=this.toJSON();return a.recordCount=this.recordCount,a.fields=this.fields.toJSON(),a},getFieldsSummary:function(){var c=this,d=new a.Query;d.set({size:0}),this.fields.each(function(a){d.addFacet(a.id)});var e=new b;return this._store.query(d.toJSON(),this.toJSON()).done(function(b){b.facets&&_.each(b.facets,function(b,d){b.id=d;var e=new a.Facet(b);c.fields.get(d).facets.reset(e)}),e.resolve(b)}),e.promise()},recordSummary:function(a){return a.summary()},_backendFromString:function(a){var b=null;return recline&&recline.Backend&&_.each(_.keys(recline.Backend),function(c){c.toLowerCase()===a.toLowerCase()&&(b=recline.Backend[c])}),b}}),a.Record=Backbone.Model.extend({constructor:function(){Backbone.Model.prototype.constructor.apply(this,arguments)},initialize:function(){_.bindAll(this,"getFieldValue")},getFieldValue:function(a){var b=this.getFieldValueUnrendered(a);return a&&!_.isUndefined(a.renderer)&&(b=a.renderer(b,a,this.toJSON())),b},getFieldValueUnrendered:function(a){if(!a)return"";var b=this.get(a.id);return a.deriver&&(b=a.deriver(b,a,this)),b},summary:function(){var a=this,b='<div class="recline-record-summary">';return this.fields.each(function(c){"id"!=c.id&&(b+='<div class="'+c.id+'"><strong>'+c.get("label")+"</strong>: "+a.getFieldValue(c)+"</div>")}),b+="</div>"},fetch:function(){},save:function(){},destroy:function(){this.trigger("destroy",this)}}),a.RecordList=Backbone.Collection.extend({constructor:function(){Backbone.Collection.prototype.constructor.apply(this,arguments)},model:a.Record}),a.Field=Backbone.Model.extend({constructor:function(){Backbone.Model.prototype.constructor.apply(this,arguments)},defaults:{label:null,type:"string",format:null,is_derived:!1},initialize:function(b,c){if("0"in b)throw new Error("Looks like you did not pass a proper hash with id to Field constructor");null===this.attributes.label&&this.set({label:this.id}),this.attributes.type.toLowerCase()in this._typeMap&&(this.attributes.type=this._typeMap[this.attributes.type.toLowerCase()]),c&&(this.renderer=c.renderer,this.deriver=c.deriver),this.renderer||(this.renderer=this.defaultRenderers[this.get("type")]),this.facets=new a.FacetList},_typeMap:{text:"string","double":"number","float":"number",numeric:"number","int":"integer",datetime:"date-time",bool:"boolean",timestamp:"date-time",json:"object"},defaultRenderers:{object:function(a){return JSON.stringify(a)},geo_point:function(a){return JSON.stringify(a)},number:function(a,b){var c=b.get("format");return"percentage"===c?a+"%":a},string:function(a,b){var c=b.get("format");if("markdown"===c){if("undefined"!=typeof Showdown){var d=new Showdown.converter;return out=d.makeHtml(a),out}return a}return"plain"==c?a:(a&&"string"==typeof a&&(a=a.replace(/(https?:\/\/[^ ]+)/g,'<a href="$1">$1</a>')),a)}}}),a.FieldList=Backbone.Collection.extend({constructor:function(){Backbone.Collection.prototype.constructor.apply(this,arguments)},model:a.Field}),a.Query=Backbone.Model.extend({constructor:function(){Backbone.Model.prototype.constructor.apply(this,arguments)},defaults:function(){return{size:100,from:0,q:"",facets:{},filters:[]}},_filterTemplates:{term:{type:"term",field:"",term:""},range:{type:"range",from:"",to:""},geo_distance:{type:"geo_distance",distance:10,unit:"km",point:{lon:0,lat:0}}},addFilter:function(a){var b=JSON.parse(JSON.stringify(a));_.keys(a).length<=3&&(b=_.defaults(b,this._filterTemplates[a.type]));var c=this.get("filters");c.push(b),this.trigger("change:filters:new-blank")},replaceFilter:function(a){var b=this.get("filters"),c=-1;_.each(this.get("filters"),function(b,d){a.field==b.field&&(c=d)}),c>=0&&(b.splice(c,1),this.set({filters:b})),this.addFilter(a)},updateFilter:function(){},removeFilter:function(a){var b=this.get("filters");b.splice(a,1),this.set({filters:b}),this.trigger("change")},addFacet:function(a,b,c){var d=this.get("facets");_.contains(_.keys(d),a)||(d[a]={terms:{field:a}},_.isUndefined(b)||(d[a].terms.size=b),this.set({facets:d},{silent:!0}),c||this.trigger("facet:add",this))},addHistogramFacet:function(a){var b=this.get("facets");b[a]={date_histogram:{field:a,interval:"day"}},this.set({facets:b},{silent:!0}),this.trigger("facet:add",this)},removeFacet:function(a){var b=this.get("facets");_.contains(_.keys(b),a)&&(delete b[a],this.set({facets:b},{silent:!0}),this.trigger("facet:remove",this))},clearFacets:function(){var a=this.get("facets");_.each(_.keys(a),function(b){delete a[b]}),this.trigger("facet:remove",this)},refreshFacets:function(){this.trigger("facet:add",this)}}),a.Facet=Backbone.Model.extend({constructor:function(){Backbone.Model.prototype.constructor.apply(this,arguments)},defaults:function(){return{_type:"terms",total:0,other:0,missing:0,terms:[]}}}),a.FacetList=Backbone.Collection.extend({constructor:function(){Backbone.Collection.prototype.constructor.apply(this,arguments)},model:a.Facet}),a.ObjectState=Backbone.Model.extend({})}(this.recline.Model),this.recline=this.recline||{},this.recline.View=this.recline.View||{},function(a,b){"use strict";b.Flot=Backbone.View.extend({template:'     <div class="recline-flot">       <div class="panel graph" style="display: block;">         <div class="js-temp-notice alert alert-block">           <h3 class="alert-heading">Hey there!</h3>           <p>There\'s no graph here yet because we don\'t know what fields you\'d like to see plotted.</p>           <p>Please tell us by <strong>using the menu on the right</strong> and a graph will automatically appear.</p>         </div>       </div>     </div> ',initialize:function(a){var c=this;this.graphColors=["#edc240","#afd8f8","#cb4b4b","#4da74d","#9440ed"],_.bindAll(this,"render","redraw","_toolTip","_xaxisLabel"),this.needToRedraw=!1,this.listenTo(this.model,"change",this.render),this.listenTo(this.model.fields,"reset add",this.render),this.listenTo(this.model.records,"reset add",this.redraw);var d=_.extend({group:null,series:[],graphType:"lines-and-points"},a.state);this.state=new recline.Model.ObjectState(d),this.previousTooltipPoint={x:null,y:null},this.editor=new b.FlotControls({model:this.model,state:this.state.toJSON()}),this.listenTo(this.editor.state,"change",function(){c.state.set(c.editor.state.toJSON()),c.redraw()}),this.elSidebar=this.editor.$el},render:function(){var a=this.model.toTemplateJSON(),b=Mustache.render(this.template,a);return this.$el.html(b),this.$graph=this.$el.find(".panel.graph"),this.$graph.on("plothover",this._toolTip),this},remove:function(){this.editor.remove(),Backbone.View.prototype.remove.apply(this,arguments)},redraw:function(){var b=!jQuery.expr.filters.hidden(this.el);if(!b||0===this.model.records.length)return void(this.needToRedraw=!0);if(this.state.get("group")&&this.state.get("series")){var c=this.createSeries(),d=this.getGraphOptions(this.state.attributes.graphType,c[0].data.length);this.plot=a.plot(this.$graph,c,d)}},show:function(){this.needToRedraw&&this.redraw()},_toolTip:function(b,c,d){if(d){if(this.previousTooltipPoint.x!==d.dataIndex||this.previousTooltipPoint.y!==d.seriesIndex){this.previousTooltipPoint.x=d.dataIndex,this.previousTooltipPoint.y=d.seriesIndex,a("#recline-flot-tooltip").remove();var e=d.datapoint[0].toFixed(2),f=d.datapoint[1].toFixed(2);"bars"===this.state.attributes.graphType&&(e=d.datapoint[1].toFixed(2),f=d.datapoint[0].toFixed(2));var g,h,i=_.template("<%= group %> = <%= x %>, <%= series %> = <%= y %>",{group:this.state.attributes.group,x:this._xaxisLabel(e),series:d.series.label,y:f});"bars"===this.state.attributes.graphType?(g=d.pageX+15,h=d.pageY-10):"columns"===this.state.attributes.graphType?(g=d.pageX+15,h=d.pageY):(g=d.pageX+10,h=d.pageY-20),a('<div id="recline-flot-tooltip">'+i+"</div>").css({top:h,left:g}).appendTo("body").fadeIn(200)}}else a("#recline-flot-tooltip").remove(),this.previousTooltipPoint.x=null,this.previousTooltipPoint.y=null},_xaxisLabel:function(a){return this._groupFieldIsDateTime()?a=new Date(parseFloat(a)).toLocaleDateString():this.xvaluesAreIndex&&(a=parseInt(a,10),a=this.model.records.models[a].get(this.state.attributes.group)),a},getGraphOptions:function(a){var b=this,c=b._groupFieldIsDateTime(),d={};if(c||(d.tickFormatter=function(a){var c=b._xaxisLabel(a)||"";return"string"!=typeof c&&(c=c.toString()),"bars"!==b.state.attributes.graphType&&c.length>10&&(c=c.slice(0,10)+"..."),c}),this.xvaluesAreIndex){for(var e=Math.min(this.model.records.length,15),f=this.model.records.length/e,g=[],h=0;e>h;h++)g.push(parseInt(h*f,10));d.ticks=g}else c&&(d.mode="time");var i={};i.autoscale=!0,i.autoscaleMargin=.02;var j={};j.position="ne";var k={};k.hoverable=!0,k.clickable=!0,k.borderColor="#aaaaaa",k.borderWidth=1;var l={lines:{legend:j,colors:this.graphColors,lines:{show:!0},xaxis:d,yaxis:i,grid:k},points:{legend:j,colors:this.graphColors,points:{show:!0,hitRadius:5},xaxis:d,yaxis:i,grid:k},"lines-and-points":{legend:j,colors:this.graphColors,points:{show:!0,hitRadius:5},lines:{show:!0},xaxis:d,yaxis:i,grid:k},bars:{legend:j,colors:this.graphColors,lines:{show:!1},xaxis:i,yaxis:d,grid:k,bars:{show:!0,horizontal:!0,shadowSize:0,align:"center",barWidth:.8}},columns:{legend:j,colors:this.graphColors,lines:{show:!1},xaxis:d,yaxis:i,grid:k,bars:{show:!0,horizontal:!1,shadowSize:0,align:"center",barWidth:.8}}};
return b.state.get("graphOptions")?_.extend(l[a],b.state.get("graphOptions")):l[a]},_groupFieldIsDateTime:function(){var a=this.model.fields.get(this.state.attributes.group),b=a.get("type"),c="date"===b||"date-time"===b||"time"===b;return c},createSeries:function(){var a=this;a.xvaluesAreIndex=!1;var b=[],c=a.model.fields.get(a.state.attributes.group),d=a._groupFieldIsDateTime();return _.each(this.state.attributes.series,function(e){var f=[],g=a.model.fields.get(e).get("label");if(d)var h=function(a){var b=moment(String(a));return b.isValid()&&(a=b.toDate().getTime()),a};else{var i=_.map(a.model.records.models,function(a){return a.getFieldValueUnrendered(c)});if(_.all(i,function(a){return!isNaN(parseFloat(a))}))var h=function(a){return parseFloat(a)};else a.xvaluesAreIndex=!0}_.each(a.model.records.models,function(b,d){if(a.xvaluesAreIndex)var g=d;else var g=h(b.getFieldValueUnrendered(c));var i=a.model.fields.get(e),j=b.getFieldValueUnrendered(i);f.push("bars"==a.state.attributes.graphType?[j,g]:[g,j])}),b.push({data:f,label:g,hoverable:!0})}),b}}),b.FlotControls=Backbone.View.extend({className:"editor",template:'   <div class="editor">     <form class="form-stacked">       <div class="clearfix">         <label>Graph Type</label>         <div class="input editor-type">           <select>           <option value="lines-and-points">Lines and Points</option>           <option value="lines">Lines</option>           <option value="points">Points</option>           <option value="bars">Bars</option>           <option value="columns">Columns</option>           </select>         </div>         <label>Group Column (Axis 1)</label>         <div class="input editor-group">           <select>           <option value="">Please choose ...</option>           {{#fields}}           <option value="{{id}}">{{label}}</option>           {{/fields}}           </select>         </div>         <div class="editor-series-group">         </div>       </div>       <div class="editor-buttons">         <button class="btn editor-add">Add Series</button>       </div>       <div class="editor-buttons editor-submit" comment="hidden temporarily" style="display: none;">         <button class="editor-save">Save</button>         <input type="hidden" class="editor-id" value="chart-1" />       </div>     </form>   </div> ',templateSeriesEditor:'     <div class="editor-series js-series-{{seriesIndex}}">       <label>Series <span>{{seriesName}} (Axis 2)</span>         [<a href="#remove" class="action-remove-series">Remove</a>]       </label>       <div class="input">         <select>         {{#fields}}         <option value="{{id}}">{{label}}</option>         {{/fields}}         </select>       </div>     </div>   ',events:{"change form select":"onEditorSubmit","click .editor-add":"_onAddSeries","click .action-remove-series":"removeSeries"},initialize:function(a){_.bindAll(this,"render"),this.listenTo(this.model.fields,"reset add",this.render),this.state=new recline.Model.ObjectState(a.state),this.render()},render:function(){var a=this,b=this.model.toTemplateJSON(),c=Mustache.render(this.template,b);this.$el.html(c),this.state.get("graphType")&&this._selectOption(".editor-type",this.state.get("graphType")),this.state.get("group")&&this._selectOption(".editor-group",this.state.get("group"));var d=[""];return this.state.get("series").length>0&&(d=this.state.get("series")),_.each(d,function(b,c){a.addSeries(c),a._selectOption(".editor-series.js-series-"+c,b)}),this},_selectOption:function(b,c){var d=this.$el.find(b+" select > option");d&&d.each(function(){return this.value==c?(a(this).attr("selected","selected"),!1):void 0})},onEditorSubmit:function(){var b=(this.$el.find(".editor-group select"),this.$el.find(".editor-series select")),c=b.map(function(){return a(this).val()}),d={series:a.makeArray(c),group:this.$el.find(".editor-group select").val(),graphType:this.$el.find(".editor-type select").val()};this.state.set(d)},addSeries:function(a){var b=_.extend({seriesIndex:a,seriesName:String.fromCharCode(a+64+1)},this.model.toTemplateJSON()),c=Mustache.render(this.templateSeriesEditor,b);return this.$el.find(".editor-series-group").append(c),this},_onAddSeries:function(a){a.preventDefault(),this.addSeries(this.state.get("series").length)},removeSeries:function(b){b.preventDefault();var c=a(b.target);c.parent().parent().remove(),this.onEditorSubmit()}})}(jQuery,recline.View),this.recline=this.recline||{},this.recline.View=this.recline.View||{},this.recline.View.Graph=this.recline.View.Flot,this.recline.View.GraphControls=this.recline.View.FlotControls,this.recline=this.recline||{},this.recline.View=this.recline.View||{},function(a,b){"use strict";b.Grid=Backbone.View.extend({tagName:"div",className:"recline-grid-container",initialize:function(a){_.bindAll(this,"render","onHorizontalScroll"),this.listenTo(this.model.records,"add reset remove",this.render),this.tempState={};var b=_.extend({hiddenFields:[]},a.state);this.state=new recline.Model.ObjectState(b)},events:{},setColumnSort:function(a){var b=[{}];b[0][this.tempState.currentColumn]={order:a},this.model.query({sort:b})},hideColumn:function(){var a=this.state.get("hiddenFields");a.push(this.tempState.currentColumn),this.state.set({hiddenFields:a}),this.state.trigger("change"),this.render()},showColumn:function(b){var c=_.without(this.state.get("hiddenFields"),a(b.target).data("column"));this.state.set({hiddenFields:c}),this.render()},onHorizontalScroll:function(b){var c=a(b.target).scrollLeft();this.$el.find(".recline-grid thead tr").scrollLeft(c)},template:'     <div class="table-container">     <table class="recline-grid table-striped table-condensed" cellspacing="0">       <thead class="fixed-header">         <tr>           {{#fields}}             <th class="column-header {{#hidden}}hidden{{/hidden}}" data-field="{{id}}" style="width: {{width}}px; max-width: {{width}}px; min-width: {{width}}px;" title="{{label}}">               <span class="column-header-name">{{label}}</span>             </th>           {{/fields}}           <th class="last-header" style="width: {{lastHeaderWidth}}px; max-width: {{lastHeaderWidth}}px; min-width: {{lastHeaderWidth}}px; padding: 0; margin: 0;"></th>         </tr>       </thead>       <tbody class="scroll-content"></tbody>     </table>     </div>   ',toTemplateJSON:function(){var a=this.model.toJSON();return a.notEmpty=this.fields.length>0,a.fields=this.fields.map(function(a){return a.toJSON()}),a.lastHeaderWidth=this.scrollbarDimensions.width-2,a},render:function(){var c=this;this.fields=new recline.Model.FieldList(this.model.fields.filter(function(a){return-1==_.indexOf(c.state.get("hiddenFields"),a.id)})),this.scrollbarDimensions=this.scrollbarDimensions||this._scrollbarSize();var d=this.fields.length,e=c.$el.width()-20-10*d-this.scrollbarDimensions.width,f=parseInt(Math.max(50,e/d),10),g=Math.max(e-d*f,0);this.fields.each(function(a,b){a.set(0===b?{width:f+g}:{width:f})});var h=Mustache.render(this.template,this.toTemplateJSON());this.$el.html(h),this.model.records.forEach(function(d){var e=a("<tr />");c.$el.find("tbody").append(e);var f=new b.GridRow({model:d,el:e,fields:c.fields});f.render()});var i=this.$el.find("tbody")[0];return i.scrollHeight<=i.offsetHeight&&this.$el.find("th.last-header").hide(),this.$el.find(".recline-grid").toggleClass("no-hidden",0===c.state.get("hiddenFields").length),this.$el.find(".recline-grid tbody").scroll(this.onHorizontalScroll),this},_scrollbarSize:function(){var b=a("<div style='position:absolute; top:-10000px; left:-10000px; width:100px; height:100px; overflow:scroll;'></div>").appendTo("body"),c={width:b.width()-b[0].clientWidth+1,height:b.height()-b[0].clientHeight};return b.remove(),c}}),b.GridRow=Backbone.View.extend({initialize:function(a){_.bindAll(this,"render"),this._fields=a.fields,this.listenTo(this.model,"change",this.render)},template:'       {{#cells}}       <td data-field="{{field}}" style="width: {{width}}px; max-width: {{width}}px; min-width: {{width}}px;">         <div class="data-table-cell-content">           <a href="javascript:{}" class="data-table-cell-edit" title="Edit this cell">&nbsp;</a>           <div class="data-table-cell-value">{{{value}}}</div>         </div>       </td>       {{/cells}}     ',events:{"click .data-table-cell-edit":"onEditClick","click .data-table-cell-editor .okButton":"onEditorOK","click .data-table-cell-editor .cancelButton":"onEditorCancel"},toTemplateJSON:function(){var a=this.model,b=this._fields.map(function(b){return{field:b.id,width:b.get("width"),value:a.getFieldValue(b)}});return{id:this.id,cells:b}},render:function(){this.$el.attr("data-id",this.model.id);var a=Mustache.render(this.template,this.toTemplateJSON());return this.$el.html(a),this},cellEditorTemplate:'     <div class="menu-container data-table-cell-editor">       <textarea class="data-table-cell-editor-editor" bind="textarea">{{value}}</textarea>       <div id="data-table-cell-editor-actions">         <div class="data-table-cell-editor-action">           <button class="okButton btn primary">Update</button>           <button class="cancelButton btn danger">Cancel</button>         </div>       </div>     </div>   ',onEditClick:function(b){var c=this.$el.find(".data-table-cell-editor-editor");c.length>0&&c.parents(".data-table-cell-value").html(c.text()).siblings(".data-table-cell-edit").removeClass("hidden"),a(b.target).addClass("hidden");var d=a(b.target).siblings(".data-table-cell-value");d.data("previousContents",d.text());var e=Mustache.render(this.cellEditorTemplate,{value:d.text()});d.html(e)},onEditorOK:function(b){var c=a(b.target),d=(c.parents("tr").attr("data-id"),c.parents("td").attr("data-field")),e=c.parents(".data-table-cell-editor").find(".data-table-cell-editor-editor").val(),f={};f[d]=e,this.model.set(f),this.trigger("recline:flash",{message:"Updating row...",loader:!0}),this.model.save().then(function(){this.trigger("recline:flash",{message:"Row updated successfully",category:"success"})}).fail(function(){this.trigger("recline:flash",{message:"Error saving row",category:"error",persist:!0})})},onEditorCancel:function(b){var c=a(b.target).parents(".data-table-cell-value");c.html(c.data("previousContents")).siblings(".data-table-cell-edit").removeClass("hidden")}})}(jQuery,recline.View),this.recline=this.recline||{},this.recline.View=this.recline.View||{},function(a,b){"use strict";b.Map=Backbone.View.extend({template:'     <div class="recline-map">       <div class="panel map"></div>     </div> ',latitudeFieldNames:["lat","latitude"],longitudeFieldNames:["lon","longitude"],geometryFieldNames:["geojson","geom","the_geom","geometry","spatial","location","geo","lonlat"],initialize:function(a){var c=this;this.visible=!0,this.mapReady=!1,this.map=null;var d=_.extend({geomField:null,lonField:null,latField:null,autoZoom:!0,cluster:!1},a.state);this.state=new recline.Model.ObjectState(d),this._clusterOptions={zoomToBoundsOnClick:!0,maxClusterRadius:80,singleMarkerMode:!1,skipDuplicateAddTesting:!0,animateAddingMarkers:!1},this.listenTo(this.model.fields,"change",function(){c._setupGeometryField(),c.render()}),this.listenTo(this.model.records,"add",function(a){c.redraw("add",a)}),this.listenTo(this.model.records,"change",function(a){c.redraw("remove",a),c.redraw("add",a)}),this.listenTo(this.model.records,"remove",function(a){c.redraw("remove",a)}),this.listenTo(this.model.records,"reset",function(){c.redraw("reset")}),this.menu=new b.MapMenu({model:this.model,state:this.state.toJSON()}),this.listenTo(this.menu.state,"change",function(){c.state.set(c.menu.state.toJSON()),c.redraw()}),this.listenTo(this.state,"change",function(){c.redraw()}),this.elSidebar=this.menu.$el},infobox:function(a){var b="";for(var c in a.attributes)this.state.get("geomField")&&c==this.state.get("geomField")||(b+="<div><strong>"+c+"</strong>: "+a.attributes[c]+"</div>");return b},geoJsonLayerOptions:{pointToLayer:function(a,b){var c=new L.Marker(b);return c.bindPopup(a.properties.popupContent),this.markers.addLayer(c),c},onEachFeature:function(a,b){a.properties&&a.properties.popupContent&&b.bindPopup(a.properties.popupContent)}},render:function(){var a=Mustache.render(this.template,this.model.toTemplateJSON());return this.$el.html(a),this.$map=this.$el.find(".panel.map"),this.redraw(),this},redraw:function(a,b){var c=this;if(a=a||"refresh",c._geomReady()||c._setupGeometryField(),c.mapReady||c._setupMap(),this._geomReady()&&this.mapReady){this.map.removeLayer(this.features),this.map.removeLayer(this.markers);var d=0;this.features.eachLayer(function(){d++}),"refresh"==a||"reset"==a?(this.features.clearLayers(),this.map.removeLayer(this.markers),this.markers=new L.MarkerClusterGroup(this._clusterOptions),this._add(this.model.records.models)):"add"==a&&b?this._add(b):"remove"==a&&b&&this._remove(b),this.map.addLayer(this.state.get("cluster")?this.markers:this.features),this.state.get("autoZoom")&&(this.visible?this._zoomToFeatures():this._zoomPending=!0)}},show:function(){this.map&&(this.map.invalidateSize(),this._zoomPending&&this.state.get("autoZoom")&&(this._zoomToFeatures(),this._zoomPending=!1)),this.visible=!0},hide:function(){this.visible=!1},_geomReady:function(){return Boolean(this.state.get("geomField")||this.state.get("latField")&&this.state.get("lonField"))},_add:function(a){var b=this;a instanceof Array||(a=[a]);var c=0,d=0;_.every(a,function(a){c+=1;var e=b._getGeometryFromRecord(a);if("undefined"==typeof e||null===e)return!0;if(e instanceof Object){e.properties={popupContent:b.infobox(a),cid:a.cid};try{b.features.addData(e)}catch(f){d+=1;var g="Wrong geometry value";f.message&&(g+=" ("+f.message+")"),10>=d&&b.trigger("recline:flash",{message:g,category:"error"})}}else d+=1,10>=d&&b.trigger("recline:flash",{message:"Wrong geometry value",category:"error"});return!0})},_remove:function(a){var b=this;a instanceof Array||(a=[a]),_.each(a,function(a){for(var c in b.features._layers)b.features._layers[c].feature.properties.cid==a.cid&&b.features.removeLayer(b.features._layers[c])})},_parseCoordinateString:function(a){if("string"!=typeof a)return parseFloat(a);var b,c=a.split(/[^-?\.\d\w]+/),d=0,e=0,f=[1,60,3600];for(b=0;b<c.length;++b)isNaN(parseFloat(c[b]))||(d+=parseFloat(c[b])/f[e],e+=1);return a.match(/[SW]/)&&(d=-1*d),d},_getGeometryFromRecord:function(b){if(this.state.get("geomField")){var c=b.get(this.state.get("geomField"));if("string"==typeof c)try{c=a.parseJSON(c)}catch(d){}if("string"==typeof c){c=c.replace("(","").replace(")","");var e=c.split(","),f=this._parseCoordinateString(e[0]),g=this._parseCoordinateString(e[1]);return isNaN(g)||isNaN(parseFloat(f))?null:{type:"Point",coordinates:[g,f]}}return c&&_.isArray(c)?{type:"Point",coordinates:[c[0],c[1]]}:c&&c.lat?{type:"Point",coordinates:[c.lon||c.lng,c.lat]}:c}if(this.state.get("lonField")&&this.state.get("latField")){var g=b.get(this.state.get("lonField")),f=b.get(this.state.get("latField"));if(g=this._parseCoordinateString(g),f=this._parseCoordinateString(f),!isNaN(parseFloat(g))&&!isNaN(parseFloat(f)))return{type:"Point",coordinates:[g,f]}}return null},_setupGeometryField:function(){this._geomReady()||(this.state.set({geomField:this._checkField(this.geometryFieldNames),latField:this._checkField(this.latitudeFieldNames),lonField:this._checkField(this.longitudeFieldNames)}),this.menu.state.set(this.state.toJSON()))},_checkField:function(a){for(var b=this.model.fields.pluck("id"),c=0;c<a.length;c++)for(var d=0;d<b.length;d++)if(b[d].toLowerCase()==a[c].toLowerCase())return b[d];return null},_zoomToFeatures:function(){var a=this.features.getBounds();a&&a.getNorthEast()&&a.getSouthWest()?this.map.fitBounds(a):this.map.setView([0,0],2)},_setupMap:function(){this.map=new L.Map(this.$map.get(0));var a="//otile{s}-s.mqcdn.com/tiles/1.0.0/osm/{z}/{x}/{y}.png",b='Map data &copy; 2011 OpenStreetMap contributors, Tiles Courtesy of <a href="http://www.mapquest.com/" target="_blank">MapQuest</a> <img src="//developer.mapquest.com/content/osm/mq_logo.png">',c=new L.TileLayer(a,{maxZoom:18,attribution:b,subdomains:"1234"});this.map.addLayer(c),this.markers=new L.MarkerClusterGroup(this._clusterOptions),this.geoJsonLayerOptions.pointToLayer=_.bind(this.geoJsonLayerOptions.pointToLayer,this),this.features=new L.GeoJSON(null,this.geoJsonLayerOptions),this.map.setView([0,0],2),this.mapReady=!0},_selectOption:function(b,c){var d=a("."+b+" > select > option");d&&d.each(function(){return this.value==c?(a(this).attr("selected","selected"),!1):void 0})}}),b.MapMenu=Backbone.View.extend({className:"editor",template:'     <form class="form-stacked">       <div class="clearfix">         <div class="editor-field-type">             <label class="radio">               <input type="radio" id="editor-field-type-latlon" name="editor-field-type" value="latlon" checked="checked"/>               Latitude / Longitude fields</label>             <label class="radio">               <input type="radio" id="editor-field-type-geom" name="editor-field-type" value="geom" />               GeoJSON field</label>         </div>         <div class="editor-field-type-latlon">           <label>Latitude field</label>           <div class="input editor-lat-field">             <select>             <option value=""></option>             {{#fields}}             <option value="{{id}}">{{label}}</option>             {{/fields}}             </select>           </div>           <label>Longitude field</label>           <div class="input editor-lon-field">             <select>             <option value=""></option>             {{#fields}}             <option value="{{id}}">{{label}}</option>             {{/fields}}             </select>           </div>         </div>         <div class="editor-field-type-geom" style="display:none">           <label>Geometry field (GeoJSON)</label>           <div class="input editor-geom-field">             <select>             <option value=""></option>             {{#fields}}             <option value="{{id}}">{{label}}</option>             {{/fields}}             </select>           </div>         </div>       </div>       <div class="editor-buttons">         <button class="btn editor-update-map">Update</button>       </div>       <div class="editor-options" >         <label class="checkbox">           <input type="checkbox" id="editor-auto-zoom" value="autozoom" checked="checked" />           Auto zoom to features</label>         <label class="checkbox">           <input type="checkbox" id="editor-cluster" value="cluster"/>           Cluster markers</label>       </div>       <input type="hidden" class="editor-id" value="map-1" />     </form>   ',events:{"click .editor-update-map":"onEditorSubmit","change .editor-field-type":"onFieldTypeChange","click #editor-auto-zoom":"onAutoZoomChange","click #editor-cluster":"onClusteringChange"},initialize:function(a){_.bindAll(this,"render"),this.listenTo(this.model.fields,"change",this.render),this.state=new recline.Model.ObjectState(a.state),this.listenTo(this.state,"change",this.render),this.render()},render:function(){var a=Mustache.render(this.template,this.model.toTemplateJSON());return this.$el.html(a),this._geomReady()&&this.model.fields.length&&(this.state.get("geomField")?(this._selectOption("editor-geom-field",this.state.get("geomField")),this.$el.find("#editor-field-type-geom").attr("checked","checked").change()):(this._selectOption("editor-lon-field",this.state.get("lonField")),this._selectOption("editor-lat-field",this.state.get("latField")),this.$el.find("#editor-field-type-latlon").attr("checked","checked").change())),this.state.get("autoZoom")?this.$el.find("#editor-auto-zoom").attr("checked","checked"):this.$el.find("#editor-auto-zoom").removeAttr("checked"),this.state.get("cluster")?this.$el.find("#editor-cluster").attr("checked","checked"):this.$el.find("#editor-cluster").removeAttr("checked"),this},_geomReady:function(){return Boolean(this.state.get("geomField")||this.state.get("latField")&&this.state.get("lonField"))},onEditorSubmit:function(a){return a.preventDefault(),this.state.set(this.$el.find("#editor-field-type-geom").attr("checked")?{geomField:this.$el.find(".editor-geom-field > select > option:selected").val(),lonField:null,latField:null}:{geomField:null,lonField:this.$el.find(".editor-lon-field > select > option:selected").val(),latField:this.$el.find(".editor-lat-field > select > option:selected").val()}),!1},onFieldTypeChange:function(a){"geom"==a.target.value?(this.$el.find(".editor-field-type-geom").show(),this.$el.find(".editor-field-type-latlon").hide()):(this.$el.find(".editor-field-type-geom").hide(),this.$el.find(".editor-field-type-latlon").show())},onAutoZoomChange:function(){this.state.set({autoZoom:!this.state.get("autoZoom")})},onClusteringChange:function(){this.state.set({cluster:!this.state.get("cluster")})},_selectOption:function(b,c){var d=this.$el.find("."+b+" > select > option");d&&d.each(function(){return this.value==c?(a(this).attr("selected","selected"),!1):void 0})}})}(jQuery,recline.View),this.recline=this.recline||{},this.recline.View=this.recline.View||{},function(a,b){"use strict";b.MultiView=Backbone.View.extend({template:'   <div class="recline-data-explorer">     <div class="alert-messages"></div>         <div class="header clearfix">       <div class="navigation">         <div class="btn-group" data-toggle="buttons-radio">         {{#views}}         <a href="#{{id}}" data-view="{{id}}" class="btn">{{label}}</a>         {{/views}}         </div>       </div>       <div class="recline-results-info">         <span class="doc-count">{{recordCount}}</span> records      </div>       <div class="menu-right">         <div class="btn-group" data-toggle="buttons-checkbox">           {{#sidebarViews}}           <a href="#" data-action="{{id}}" class="btn">{{label}}</a>           {{/sidebarViews}}         </div>       </div>       <div class="query-editor-here" style="display:inline;"></div>     </div>     <div class="data-view-sidebar"></div>     <div class="data-view-container"></div>   </div>   ',events:{"click .menu-right a":"_onMenuClick","click .navigation a":"_onSwitchView"},initialize:function(a){var c=this;this._setupState(a.state),this.pageViews=a.views?a.views:[{id:"grid",label:"Grid",view:new b.SlickGrid({model:this.model,state:this.state.get("view-grid")})},{id:"graph",label:"Graph",view:new b.Graph({model:this.model,state:this.state.get("view-graph")})},{id:"map",label:"Map",view:new b.Map({model:this.model,state:this.state.get("view-map")})},{id:"timeline",label:"Timeline",view:new b.Timeline({model:this.model,state:this.state.get("view-timeline")})}],this.sidebarViews=a.sidebarViews?a.sidebarViews:[{id:"filterEditor",label:"Filters",view:new b.FilterEditor({model:this.model})},{id:"fieldsView",label:"Fields",view:new b.Fields({model:this.model})}],this.render(),this._bindStateChanges(),this._bindFlashNotifications(),this.state.get("readOnly")&&this.setReadOnly(),this.updateNav(this.state.get("currentView")?this.state.get("currentView"):this.pageViews[0].id),this._showHideSidebar(),this.listenTo(this.model,"query:start",function(){c.notify({loader:!0,persist:!0})}),this.listenTo(this.model,"query:done",function(){c.clearNotifications(),c.$el.find(".doc-count").text(c.model.recordCount||"Unknown")}),this.listenTo(this.model,"query:fail",function(a){c.clearNotifications();var b="";"string"==typeof a?b=a:"object"==typeof a?(a.title&&(b=a.title+": "),a.message&&(b+=a.message)):b="There was an error querying the backend",c.notify({message:b,category:"error",persist:!0})}),this.model.queryState.set(c.state.get("query"),{silent:!0})},setReadOnly:function(){this.$el.addClass("recline-read-only")},render:function(){var a=this.model.toTemplateJSON();a.views=this.pageViews,a.sidebarViews=this.sidebarViews;var b=Mustache.render(this.template,a);this.$el.html(b);var c=this.$el.find(".data-view-container"),d=this.$el.find(".data-view-sidebar");_.each(this.pageViews,function(a){a.view.render(),a.view.redraw&&a.view.redraw(),c.append(a.view.el),a.view.elSidebar&&d.append(a.view.elSidebar)}),_.each(this.sidebarViews,function(a){this["$"+a.id]=a.view.$el,d.append(a.view.el)},this),this.pager=new recline.View.Pager({model:this.model}),this.$el.find(".recline-results-info").after(this.pager.el),this.queryEditor=new recline.View.QueryEditor({model:this.model.queryState}),this.$el.find(".query-editor-here").append(this.queryEditor.el)},remove:function(){_.each(this.pageViews,function(a){a.view.remove()}),_.each(this.sidebarViews,function(a){a.view.remove()}),this.pager.remove(),this.queryEditor.remove(),Backbone.View.prototype.remove.apply(this,arguments)},_showHideSidebar:function(){var b=this.$el.find(".data-view-sidebar"),c=b.children().filter(function(){return"none"!=a(this).css("display")}).length;c>0?b.show():b.hide()},updateNav:function(a){this.$el.find(".navigation a").removeClass("active");var b=this.$el.find('.navigation a[data-view="'+a+'"]');b.addClass("active"),_.each(this.pageViews,function(b){b.id===a?(b.view.$el.show(),b.view.elSidebar&&b.view.elSidebar.show()):(b.view.$el.hide(),b.view.elSidebar&&b.view.elSidebar.hide(),b.view.hide&&b.view.hide())}),this._showHideSidebar(),_.each(this.pageViews,function(b){b.id===a&&b.view.show&&b.view.show()})},_onMenuClick:function(b){b.preventDefault();var c=a(b.target).attr("data-action");this["$"+c].toggle(),this._showHideSidebar()},_onSwitchView:function(b){b.preventDefault();var c=a(b.target).attr("data-view");this.updateNav(c),this.state.set({currentView:c})},_setupState:function(a){var c=this,d=b.parseHashQueryString(),e=d.reclineQuery;e=e?JSON.parse(e):c.model.queryState.toJSON();var f=d["view-graph"]||d.graph;f=f?JSON.parse(f):{};var g=_.extend({query:e,"view-graph":f,backend:this.model.backend.__type__,url:this.model.get("url"),dataset:this.model.toJSON(),currentView:null,readOnly:!1},a);this.state=new recline.Model.ObjectState(g)},_bindStateChanges:function(){var a=this;this.listenTo(this.model.queryState,"change",function(){a.state.set({query:a.model.queryState.toJSON()})}),_.each(this.pageViews,function(b){if(b.view.state&&b.view.state.bind){var c={};c["view-"+b.id]=b.view.state.toJSON(),a.state.set(c),a.listenTo(b.view.state,"change",function(){var c={};c["view-"+b.id]=b.view.state.toJSON(),a.state.set(c,{silent:!0}),a.state.trigger("change")})}})},_bindFlashNotifications:function(){var a=this;_.each(this.pageViews,function(b){a.listenTo(b.view,"recline:flash",function(b){a.notify(b)})})},notify:function(b){var c,d=_.extend({message:"Loading",category:"warning",loader:!1},b);c=d.loader?'         <div class="alert alert-info alert-loader">           {{message}}           <span class="notification-loader">&nbsp;</span>         </div>':'         <div class="alert alert-{{category}} fade in" data-alert="alert"><a class="close" data-dismiss="alert" href="#">×</a>           {{message}}         </div>';var e=a(Mustache.render(c,d));e=a(e).appendTo(a(".recline-data-explorer .alert-messages")),b.persist||setTimeout(function(){a(e).fadeOut(1e3,function(){a(this).remove()})},1e3)},clearNotifications:function(){var b=a(".recline-data-explorer .alert-messages .alert");b.fadeOut(1500,function(){a(this).remove()})}}),b.MultiView.restore=function(a){var c;c="memory"===a.backend?{backend:"memory",records:[{stub:"this is a stub dataset because we do not restore memory datasets"}]}:_.extend({url:a.url,backend:a.backend},a.dataset);var d=new recline.Model.Dataset(c),e=new b.MultiView({model:d,state:a});return e};var c=/^([^?]+)(\?.*)?/;b.parseHashUrl=function(a){var b=c.exec(a);return null===b?{}:{path:b[1],query:b[2]||""}},b.parseQueryString=function(a){if(!a)return{};var b,c={},d=function(a){return unescape(a.replace(/\+/g," "))},e=/([^&=]+)=?([^&]*)/g;for(a&&a.length&&"?"===a[0]&&(a=a.slice(1));b=e.exec(a);)c[d(b[1])]=d(b[2]);return c},b.parseHashQueryString=function(){var a=b.parseHashUrl(window.location.hash).query;return b.parseQueryString(a)},b.composeQueryString=function(b){var c="?",d=[];return a.each(b,function(a,b){"object"==typeof b&&(b=JSON.stringify(b)),d.push(a+"="+encodeURIComponent(b))}),c+=d.join("&")},b.getNewHashForQueryString=function(a){var c=b.composeQueryString(a);return window.location.hash?window.location.hash.split("?")[0].slice(1)+c:c},b.setHashQueryString=function(a){window.location.hash=b.getNewHashForQueryString(a)}}(jQuery,recline.View),this.recline=this.recline||{},this.recline.View=this.recline.View||{},function(a,b){"use strict";b.GridControl=Backbone.View.extend({className:"recline-row-add",template:'<h1><a href="#" class="recline-row-add btn">Add row</a></h1>',initialize:function(){_.bindAll(this,"render"),this.state=new recline.Model.ObjectState,this.render()},render:function(){this.$el.html(this.template)},events:{"click .recline-row-add":"addNewRow"},addNewRow:function(a){a.preventDefault(),this.state.trigger("change")}}),b.SlickGrid=Backbone.View.extend({initialize:function(a){this.$el.addClass("recline-slickgrid"),this.templates={deleterow:'<a href="#" class="recline-row-delete btn" title="Delete row">X</a>'},_.bindAll(this,"render","onRecordChanged"),this.listenTo(this.model.records,"add remove reset",this.render),this.listenTo(this.model.records,"change",this.onRecordChanged);var c=_.extend({hiddenColumns:[],columnsOrder:[],columnsSort:{},columnsWidth:[],columnsEditor:[],options:{},fitColumns:!1},a.state);this.state=new recline.Model.ObjectState(c),this._slickHandler=new Slick.EventHandler,this.state.get("gridOptions")&&void 0!=this.state.get("gridOptions").enabledAddRow&&1==this.state.get("gridOptions").enabledAddRow&&(this.editor=new b.GridControl,this.elSidebar=this.editor.$el,this.listenTo(this.editor.state,"change",function(){this.model.records.add(new recline.Model.Record)}))},onRecordChanged:function(a){if(this.grid){var b=this.grid.getData().getModelRow(a);this.grid.invalidateRow(b),this.grid.getData().updateItem(a,b),this.grid.render()}},render:function(){function a(a){var b={};return c.model.fields.each(function(c){var d="";_.isUndefined(a.getFieldValueUnrendered(c))||(d=a.getFieldValueUnrendered(c)),b[c.id]=d}),b}function b(){var b=[],c=[];this.push=function(a,d){b.push(a),c.push(d)},this.getLength=function(){return c.length},this.getItem=function(a){return c[a]},this.getItemMetadata=function(){return{}},this.getModel=function(a){return b[a]},this.getModelRow=function(a){return _.indexOf(b,a)},this.updateItem=function(d,e){c[e]=a(d),b[e]=d}}var c=this,d=_.extend({enableCellNavigation:!0,enableColumnReorder:!0,explicitInitialization:!0,syncColumnCellResize:!0,forceFitColumns:this.state.get("fitColumns")},c.state.get("gridOptions")),e=[],f=function(a,b,d,e,f){if("del"==e.id)return c.templates.deleterow;var g=c.model.fields.get(e.id);return g.renderer?g.renderer(d,g,f):d},g=function(a){return function(b){return"date"==a.type&&isNaN(Date.parse(b))?{valid:!1,msg:"A date is required, check field field-date-format"}:{valid:!0,msg:null}}};this.state.get("gridOptions")&&void 0!=this.state.get("gridOptions").enableReOrderRow&&1==this.state.get("gridOptions").enableReOrderRow&&e.push({id:"#",name:"",width:22,behavior:"selectAndMove",selectable:!1,resizable:!1,cssClass:"recline-cell-reorder"}),this.state.get("gridOptions")&&void 0!=this.state.get("gridOptions").enabledDelRow&&1==this.state.get("gridOptions").enabledDelRow&&e.push({id:"del",name:"",field:"del",sortable:!0,width:38,formatter:f,validator:g}),_.each(this.model.fields.toJSON(),function(a){var b={id:a.id,name:a.label,field:a.id,sortable:!0,minWidth:80,formatter:f,validator:g(a)},d=_.find(c.state.get("columnsWidth"),function(b){return b.column===a.id});d&&(b.width=d.width);var h=_.find(c.state.get("columnsEditor"),function(b){return b.column===a.id});if(h)b.editor=h.editor;else{var i={string:Slick.Editors.LongText,integer:Slick.Editors.IntegerEditor,number:Slick.Editors.Text,date:Slick.Editors.Text,"boolean":Slick.Editors.YesNoSelectEditor};b.editor=a.type in i?i[a.type]:Slick.Editors.LongText}e.push(b)});var h=_.filter(e,function(a){return-1===_.indexOf(c.state.get("hiddenColumns"),a.id)
});this.state.get("columnsOrder")&&this.state.get("columnsOrder").length>0&&(h=h.sort(function(a,b){return _.indexOf(c.state.get("columnsOrder"),a.id)>_.indexOf(c.state.get("columnsOrder"),b.id)?1:-1}),e=e.sort(function(a,b){return _.indexOf(c.state.get("columnsOrder"),a.id)>_.indexOf(c.state.get("columnsOrder"),b.id)?1:-1}));for(var i=[],j=e.length-1;j>=0;j--)-1===_.indexOf(_.pluck(h,"id"),e[j].id)&&i.push(e.splice(j,1)[0]);e=e.concat(i);var k=new b;this.model.records.each(function(b){k.push(b,a(b))}),this.grid=new Slick.Grid(this.el,k,h,d);var l=this.model.queryState.get("sort");if(l){var m=l[0].field,n="desc"!==l[0].order;this.grid.setSortColumn(m,n)}c.grid.setSelectionModel(new Slick.RowSelectionModel);var o=new Slick.RowMoveManager({cancelEditOnDrag:!0});o.onBeforeMoveRows.subscribe(function(a,b){for(var c=0;c<b.rows.length;c++)if(b.rows[c]==b.insertBefore||b.rows[c]==b.insertBefore-1)return a.stopPropagation(),!1;return!0}),o.onMoveRows.subscribe(function(a,b){var d,e,f=[],g=b.rows,h=b.insertBefore,i=c.model.records.toJSON();d=i.slice(0,h),e=i.slice(h,i.length),g.sort(function(a,b){return a-b});for(var j=0;j<g.length;j++)f.push(i[g[j]]);g.reverse();for(var j=0;j<g.length;j++){var k=g[j];h>k?d.splice(k,1):e.splice(k-h,1)}i=d.concat(f.concat(e));for(var l=[],j=0;j<g.length;j++)l.push(d.length+j);c.model.records.reset(i)}),this.state.get("gridOptions")&&void 0!=this.state.get("gridOptions").enableReOrderRow&&1==this.state.get("gridOptions").enableReOrderRow&&c.grid.registerPlugin(o),this._slickHandler.subscribe(this.grid.onSort,function(a,b){var d=b.sortAsc?"asc":"desc",e=[{field:b.sortCol.field,order:d}];c.model.query({sort:e})}),this._slickHandler.subscribe(this.grid.onColumnsReordered,function(){c.state.set({columnsOrder:_.pluck(c.grid.getColumns(),"id")})}),this.grid.onColumnsResized.subscribe(function(a,b){var d=b.grid.getColumns(),e=b.grid.getOptions().defaultColumnWidth,f=[];_.each(d,function(a){a.width!=e&&f.push({column:a.id,width:a.width})}),c.state.set({columnsWidth:f})}),this._slickHandler.subscribe(this.grid.onCellChange,function(a,b){var c=b.grid,d=k.getModel(b.row),e=c.getColumns()[b.cell].id,f={};f[e]=b.item[e],d.set(f)}),this._slickHandler.subscribe(this.grid.onClick,function(a,b){try{a.preventDefault()}catch(a){}var d=0;if(c.state.get("gridOptions")&&void 0!=c.state.get("gridOptions").enableReOrderRow&&1==c.state.get("gridOptions").enableReOrderRow&&(d=1),b.cell==d&&1==c.state.get("gridOptions").enabledDelRow){var e=k.getModel(b.row);e.destroy()}});new Slick.Controls.ColumnPicker(e,this.grid,_.extend(d,{state:this.state}));return c.visible?(c.grid.init(),c.rendered=!0):c.rendered=!1,this},remove:function(){this._slickHandler.unsubscribeAll(),Backbone.View.prototype.remove.apply(this,arguments)},show:function(){this.rendered||(this.grid||this.render(),this.grid.init(),this.rendered=!0),this.visible=!0},hide:function(){this.visible=!1}})}(jQuery,recline.View),function(a){function b(b,c,d){function e(){c.onHeaderContextMenu.subscribe(f),d=a.extend({},j,d),h=a('<ul class="dropdown-menu slick-contextmenu" style="display:none;position:absolute;z-index:20;" />').appendTo(document.body),h.bind("mouseleave",function(){a(this).fadeOut(d.fadeSpeed)}),h.bind("click",g)}function f(e){e.preventDefault(),h.empty(),i=[];for(var f,g,j=0;j<b.length;j++)f=a("<li />").appendTo(h),g=a('<input type="checkbox" />').data("column-id",b[j].id).attr("id","slick-column-vis-"+b[j].id),i.push(g),null!==c.getColumnIndex(b[j].id)&&g.attr("checked","checked"),g.appendTo(f),a("<label />").text(b[j].name).attr("for","slick-column-vis-"+b[j].id).appendTo(f);a("<li/>").addClass("divider").appendTo(h),f=a("<li />").data("option","autoresize").appendTo(h),g=a('<input type="checkbox" />').data("option","autoresize").attr("id","slick-option-autoresize"),g.appendTo(f),a("<label />").text("Force fit columns").attr("for","slick-option-autoresize").appendTo(f),c.getOptions().forceFitColumns&&g.attr("checked","checked"),h.css("top",e.pageY-10).css("left",e.pageX-10).fadeIn(d.fadeSpeed)}function g(e){var f;if("autoresize"===a(e.target).data("option")){var g;return a(e.target).is("li")?(f=a(e.target).find("input").first(),g=!f.is(":checked"),f.attr("checked",g)):g=e.target.checked,g?(c.setOptions({forceFitColumns:!0}),c.autosizeColumns()):c.setOptions({forceFitColumns:!1}),void d.state.set({fitColumns:g})}if(a(e.target).is("li")&&!a(e.target).hasClass("divider")||a(e.target).is("input")){a(e.target).is("li")&&(f=a(e.target).find("input").first(),f.attr("checked",!f.is(":checked")));var h=[],j=[];if(a.each(i,function(c){a(this).is(":checked")?h.push(b[c]):j.push(b[c].id)}),!h.length)return void a(e.target).attr("checked","checked");c.setColumns(h),d.state.set({hiddenColumns:j})}}var h,i,j={fadeSpeed:250};e()}a.extend(!0,window,{Slick:{Controls:{ColumnPicker:b}}})}(jQuery),this.recline=this.recline||{},this.recline.View=this.recline.View||{},function(a,b){"use strict";"undefined"!=typeof VMM&&(VMM.debug=!1),b.Timeline=Backbone.View.extend({template:'     <div class="recline-timeline">       <div id="vmm-timeline-id"></div>     </div>   ',startFieldNames:["date","startdate","start","start-date"],endFieldNames:["end","endDate"],elementId:"#vmm-timeline-id",initialize:function(a){var b=this;this.timeline=new VMM.Timeline(this.elementId),this._timelineIsInitialized=!1,this.listenTo(this.model.fields,"reset",function(){b._setupTemporalField()}),this.listenTo(this.model.records,"all",function(){b.reloadData()});var c=_.extend({startField:null,endField:null,nonUSDates:!1,timelineJSOptions:{}},a.state);this.state=new recline.Model.ObjectState(c),this._setupTemporalField()},render:function(){var b={},c=Mustache.render(this.template,b);this.$el.html(c),a(this.elementId).length>0&&this._initTimeline()},show:function(){this._timelineIsInitialized===!1&&this._initTimeline()},_initTimeline:function(){var a=this._timelineJSON(),b=this.state.get("timelineJSOptions");b.id=this.elementId,this.timeline.init(b,a),this._timelineIsInitialized=!0},reloadData:function(){if(this._timelineIsInitialized){var a=this._timelineJSON();this.timeline.reload(a)}},convertRecord:function(a,b){return this._convertRecord(a,b)},_convertRecord:function(a){var b=this._parseDate(a.get(this.state.get("startField"))),c=this._parseDate(a.get(this.state.get("endField")));if(b){var d={startDate:b,endDate:c,headline:String(a.get("title")||""),text:a.get("description")||a.summary()};return d}return null},_timelineJSON:function(){var a=this,b={timeline:{type:"default",headline:"",date:[]}};if(this.model.records.each(function(c){var d=a.convertRecord(c,a.fields);d&&b.timeline.date.push(d)}),0===b.timeline.date.length){var c={startDate:"2000,1,1",headline:"No data to show!"};b.timeline.date.push(c)}return b},_parseDate:function(b){if(!b)return null;var c=a.trim(b);if(c=c.replace(/(\d)th/g,"$1"),c=c.replace(/(\d)st/g,"$1"),c=a.trim(c),c.match(/\d\d\d\d-\d\d-\d\d(T.*)?/)&&(c=c.replace(/-/g,",").replace("T",",").replace(":",",")),c.match(/\d\d-\d\d-\d\d.*/)&&(c=c.replace(/-/g,"/")),this.state.get("nonUSDates")){var d=c.match(/(\d\d)\/(\d\d)\/(\d\d.*)/);d&&(c=[d[2],d[1],d[3]].join("/"))}return c},_setupTemporalField:function(){this.state.set({startField:this._checkField(this.startFieldNames),endField:this._checkField(this.endFieldNames)})},_checkField:function(a){for(var b=this.model.fields.pluck("id"),c=0;c<a.length;c++)for(var d=0;d<b.length;d++)if(b[d].toLowerCase()==a[c].toLowerCase())return b[d];return null}})}(jQuery,recline.View),this.recline=this.recline||{},this.recline.View=this.recline.View||{},function(a,b){"use strict";b.FacetViewer=Backbone.View.extend({className:"recline-facet-viewer",template:'     <div class="facets">       {{#facets}}       <div class="facet-summary" data-facet="{{id}}">         <h3>           {{id}}         </h3>         <ul class="facet-items">         {{#terms}}           <li><a class="facet-choice js-facet-filter" data-value="{{term}}" href="#{{term}}">{{term}} ({{count}})</a></li>         {{/terms}}         {{#entries}}           <li><a class="facet-choice js-facet-filter" data-value="{{time}}">{{term}} ({{count}})</a></li>         {{/entries}}         </ul>       </div>       {{/facets}}     </div>   ',events:{"click .js-facet-filter":"onFacetFilter"},initialize:function(){_.bindAll(this,"render"),this.listenTo(this.model.facets,"all",this.render),this.listenTo(this.model.fields,"all",this.render),this.render()},render:function(){var a={fields:this.model.fields.toJSON()};a.facets=_.map(this.model.facets.toJSON(),function(a){return"date_histogram"===a._type&&(a.entries=_.map(a.entries,function(a){return a.term=new Date(a.time).toDateString(),a})),a});var b=Mustache.render(this.template,a);this.$el.html(b),this.model.facets.length>0?this.$el.show():this.$el.hide()},onHide:function(a){a.preventDefault(),this.$el.hide()},onFacetFilter:function(b){b.preventDefault();var c=a(b.target),d=c.closest(".facet-summary").attr("data-facet"),e=c.attr("data-value");this.model.queryState.addFilter({type:"term",field:d,term:e}),this.model.query()}})}(jQuery,recline.View),this.recline=this.recline||{},this.recline.View=this.recline.View||{},function(a,b){"use strict";b.Fields=Backbone.View.extend({className:"recline-fields-view",template:'     <div class="accordion fields-list well">     <h3>Fields <a href="#" class="js-show-hide">+</a></h3>     {{#fields}}       <div class="accordion-group field">         <div class="accordion-heading">           <i class="icon-file"></i>           <h4>             {{label}}             <small>               {{type}}               <a class="accordion-toggle" data-toggle="collapse" href="#collapse{{id}}"> &raquo; </a>             </small>           </h4>         </div>         <div id="collapse{{id}}" class="accordion-body collapse">           <div class="accordion-inner">             {{#facets}}             <div class="facet-summary" data-facet="{{id}}">               <ul class="facet-items">               {{#terms}}                 <li class="facet-item"><span class="term">{{term}}</span> <span class="count">[{{count}}]</span></li>               {{/terms}}               </ul>             </div>             {{/facets}}             <div class="clear"></div>           </div>         </div>       </div>     {{/fields}}     </div>   ',initialize:function(){var a=this;_.bindAll(this,"render"),this.listenTo(this.model.fields,"reset",function(){a.model.fields.each(function(b){b.facets.unbind("all",a.render),b.facets.bind("all",a.render)}),a.model.getFieldsSummary(),a.render()}),this.$el.find(".collapse").collapse(),this.render()},render:function(){var a={fields:[]};this.model.fields.each(function(b){var c=b.toJSON();c.facets=b.facets.toJSON(),a.fields.push(c)});var b=Mustache.render(this.template,a);this.$el.html(b)}})}(jQuery,recline.View),this.recline=this.recline||{},this.recline.View=this.recline.View||{},function(a,b){"use strict";b.FilterEditor=Backbone.View.extend({className:"recline-filter-editor well",template:'     <div class="filters">       <h3>Filters</h3>       <a href="#" class="js-add-filter">Add filter</a>       <form class="form-stacked js-add" style="display: none;">         <fieldset>           <label>Field</label>           <select class="fields">             {{#fields}}             <option value="{{id}}">{{label}}</option>             {{/fields}}           </select>           <label>Filter type</label>           <select class="filterType">             <option value="term">Value</option>             <option value="range">Range</option>             <option value="geo_distance">Geo distance</option>           </select>           <button type="submit" class="btn">Add</button>         </fieldset>       </form>       <form class="form-stacked js-edit">         {{#filters}}           {{{filterRender}}}         {{/filters}}         {{#filters.length}}         <button type="submit" class="btn">Update</button>         {{/filters.length}}       </form>     </div>   ',filterTemplates:{term:'       <div class="filter-{{type}} filter">         <fieldset>           <legend>             {{field}} <small>{{type}}</small>             <a class="js-remove-filter" href="#" title="Remove this filter" data-filter-id="{{id}}">&times;</a>           </legend>           <input type="text" value="{{term}}" name="term" data-filter-field="{{field}}" data-filter-id="{{id}}" data-filter-type="{{type}}" />         </fieldset>       </div>     ',range:'       <div class="filter-{{type}} filter">         <fieldset>           <legend>             {{field}} <small>{{type}}</small>             <a class="js-remove-filter" href="#" title="Remove this filter" data-filter-id="{{id}}">&times;</a>           </legend>           <label class="control-label" for="">From</label>           <input type="text" value="{{from}}" name="from" data-filter-field="{{field}}" data-filter-id="{{id}}" data-filter-type="{{type}}" />           <label class="control-label" for="">To</label>           <input type="text" value="{{to}}" name="to" data-filter-field="{{field}}" data-filter-id="{{id}}" data-filter-type="{{type}}" />         </fieldset>       </div>     ',geo_distance:'       <div class="filter-{{type}} filter">         <fieldset>           <legend>             {{field}} <small>{{type}}</small>             <a class="js-remove-filter" href="#" title="Remove this filter" data-filter-id="{{id}}">&times;</a>           </legend>           <label class="control-label" for="">Longitude</label>           <input type="text" value="{{point.lon}}" name="lon" data-filter-field="{{field}}" data-filter-id="{{id}}" data-filter-type="{{type}}" />           <label class="control-label" for="">Latitude</label>           <input type="text" value="{{point.lat}}" name="lat" data-filter-field="{{field}}" data-filter-id="{{id}}" data-filter-type="{{type}}" />           <label class="control-label" for="">Distance (km)</label>           <input type="text" value="{{distance}}" name="distance" data-filter-field="{{field}}" data-filter-id="{{id}}" data-filter-type="{{type}}" />         </fieldset>       </div>     '},events:{"click .js-remove-filter":"onRemoveFilter","click .js-add-filter":"onAddFilterShow","submit form.js-edit":"onTermFiltersUpdate","submit form.js-add":"onAddFilter"},initialize:function(){_.bindAll(this,"render"),this.listenTo(this.model.fields,"all",this.render),this.listenTo(this.model.queryState,"change change:filters:new-blank",this.render),this.render()},render:function(){var b=this,c=a.extend(!0,{},this.model.queryState.toJSON());c.filters=_.map(c.filters,function(a,b){return a.id=b,a}),c.fields=this.model.fields.toJSON(),c.filterRender=function(){return Mustache.render(b.filterTemplates[this.type],this)};var d=Mustache.render(this.template,c);this.$el.html(d)},onAddFilterShow:function(b){b.preventDefault();var c=a(b.target);c.hide(),this.$el.find("form.js-add").show()},onAddFilter:function(b){b.preventDefault();var c=a(b.target);c.hide();var d=c.find("select.filterType").val(),e=c.find("select.fields").val();this.model.queryState.addFilter({type:d,field:e})},onRemoveFilter:function(b){b.preventDefault();var c=a(b.target),d=c.attr("data-filter-id");this.model.queryState.removeFilter(d)},onTermFiltersUpdate:function(b){var c=this;b.preventDefault();var d=c.model.queryState.get("filters"),e=a(b.target);_.each(e.find("input"),function(b){var c=a(b),e=c.attr("data-filter-type"),f=(c.attr("data-filter-field"),parseInt(c.attr("data-filter-id"),10)),g=c.attr("name"),h=c.val();switch(e){case"term":d[f].term=h;break;case"range":d[f][g]=h;break;case"geo_distance":"distance"===g?d[f].distance=parseFloat(h):d[f].point[g]=parseFloat(h)}}),c.model.queryState.set({filters:d,from:0}),c.model.queryState.trigger("change")}})}(jQuery,recline.View),this.recline=this.recline||{},this.recline.View=this.recline.View||{},function(a,b){"use strict";b.Pager=Backbone.View.extend({className:"recline-pager",template:'     <div class="pagination">       <ul>         <li class="prev action-pagination-update"><a href="">&laquo;</a></li>         <li class="active"><label for="from">From</label><a><input name="from" type="text" value="{{from}}" /> &ndash; <label for="to">To</label><input name="to" type="text" value="{{to}}" /> </a></li>         <li class="next action-pagination-update"><a href="">&raquo;</a></li>       </ul>     </div>   ',events:{"click .action-pagination-update":"onPaginationUpdate","change input":"onFormSubmit"},initialize:function(){_.bindAll(this,"render"),this.listenTo(this.model.queryState,"change",this.render),this.render()},onFormSubmit:function(a){a.preventDefault();var b=parseInt(this.$el.find('input[name="from"]').val())-1,c=parseInt(this.$el.find('input[name="to"]').val())-1,d=this.model.recordCount-1;if(this.model.queryState.get("from")!=b)this.model.queryState.set({from:Math.min(d,Math.max(b,0))});else if(this.model.queryState.get("to")!=c){var e=Math.min(d,Math.max(c,0));this.model.queryState.set({size:Math.min(d+1,Math.max(e-b+1,1))})}},onPaginationUpdate:function(b){b.preventDefault();var c=a(b.target),d=0,e=this.model.queryState.get("from"),f=this.model.queryState.get("size"),g=!1;c.parent().hasClass("prev")?(d=Math.max(e-Math.max(0,f),0),g=d!=e):(d=Math.max(e+f,0),g=d<this.model.recordCount),g&&this.model.queryState.set({from:d})},render:function(){var a=this.model.toJSON(),b=parseInt(this.model.queryState.get("from"));a.from=b+1,a.to=Math.min(b+this.model.queryState.get("size"),this.model.recordCount);var c=Mustache.render(this.template,a);return this.$el.html(c),this}})}(jQuery,recline.View),this.recline=this.recline||{},this.recline.View=this.recline.View||{},function(a,b){"use strict";b.QueryEditor=Backbone.View.extend({className:"recline-query-editor",template:'     <form action="" method="GET" class="form-inline">       <div class="input-prepend text-query">         <span class="add-on"><i class="icon-search"></i></span>         <label>Search</label><input type="text" name="q" value="{{q}}" class="span2" placeholder="Search data ..." class="search-query" />       </div>       <button type="submit" class="btn">Go &raquo;</button>     </form>   ',events:{"submit form":"onFormSubmit"},initialize:function(){_.bindAll(this,"render"),this.listenTo(this.model,"change",this.render),this.render()},onFormSubmit:function(a){a.preventDefault();var b=this.$el.find(".text-query input").val();this.model.set({q:b})},render:function(){var a=this.model.toJSON(),b=Mustache.render(this.template,a);this.$el.html(b)}})}(jQuery,recline.View),this.recline=this.recline||{},this.recline.View=this.recline.View||{},function(a,b){"use strict";b.ValueFilter=Backbone.View.extend({className:"recline-filter-editor well",template:'     <div class="filters">       <h3>Filters</h3>       <button class="btn js-add-filter add-filter">Add filter</button>       <form class="form-stacked js-add" style="display: none;">         <fieldset>           <label>Field</label>           <select class="fields">             {{#fields}}             <option value="{{id}}">{{label}}</option>             {{/fields}}           </select>           <button type="submit" class="btn">Add</button>         </fieldset>       </form>       <form class="form-stacked js-edit">         {{#filters}}           {{{filterRender}}}         {{/filters}}         {{#filters.length}}         <button type="submit" class="btn update-filter">Update</button>         {{/filters.length}}       </form>     </div>   ',filterTemplates:{term:'       <div class="filter-{{type}} filter">         <fieldset>           {{field}}           <a class="js-remove-filter" href="#" title="Remove this filter" data-filter-id="{{id}}">&times;</a>           <input type="text" value="{{term}}" name="term" data-filter-field="{{field}}" data-filter-id="{{id}}" data-filter-type="{{type}}" />         </fieldset>       </div>     '},events:{"click .js-remove-filter":"onRemoveFilter","click .js-add-filter":"onAddFilterShow","submit form.js-edit":"onTermFiltersUpdate","submit form.js-add":"onAddFilter"},initialize:function(){_.bindAll(this,"render"),this.listenTo(this.model.fields,"all",this.render),this.listenTo(this.model.queryState,"change change:filters:new-blank",this.render),this.render()},render:function(){var b=this,c=a.extend(!0,{},this.model.queryState.toJSON());c.filters=_.map(c.filters,function(a,b){return a.id=b,a}),c.fields=this.model.fields.toJSON(),c.filterRender=function(){return Mustache.render(b.filterTemplates.term,this)};var d=Mustache.render(this.template,c);this.$el.html(d)},updateFilter:function(b){var c=this,d=c.model.queryState.get("filters"),e=a(b),f=parseInt(e.attr("data-filter-id"),10),g=e.val();d[f].term=g},onAddFilterShow:function(b){b.preventDefault();var c=a(b.target);c.hide(),this.$el.find("form.js-add").show()},onAddFilter:function(b){b.preventDefault();var c=a(b.target);c.hide();var d=c.find("select.fields").val();this.model.queryState.addFilter({type:"term",field:d})},onRemoveFilter:function(b){b.preventDefault();var c=a(b.target),d=c.attr("data-filter-id");this.model.queryState.removeFilter(d)},onTermFiltersUpdate:function(b){var c=this;b.preventDefault();var d=c.model.queryState.get("filters"),e=a(b.target);_.each(e.find("input"),function(a){c.updateFilter(a)}),c.model.queryState.set({filters:d,from:0}),c.model.queryState.trigger("change")}})}(jQuery,recline.View);